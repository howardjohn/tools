apiVersion: apps/v1
kind: Deployment
metadata:
  name: client
  labels:
    app: client
spec:
  selector:
    matchLabels:
      app: client
  replicas: 2
  template:
    metadata:
      labels:
        app: client
    spec:
      containers:
      - name: client
        image: python:3
        args:
        - python
        - -c
        - |-
          import urllib.request
          from multiprocessing import Process
          import time

          URL = "http://httpbin:8000/delay/{{ .Values.connectionDuration }}"

          def run_request():
            start = time.time()
            try:
              urllib.request.urlopen(URL)
            except urllib.error.HTTPError as e:
              print("%s error in %fs"%(e.code, time.time()-start))

          # Send requests at a steady rate
          while True:
            Process(target=run_request).start()
            time.sleep(1/{{ .Values.qps }})
