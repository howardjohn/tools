apiVersion: v1
kind: ServiceAccount
metadata:
  name: config-change-service-account
  namespace: {{ .Values.Namespace }}
  labels:
    app: config-change
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: config-change-{{ .Values.Namespace }}
rules:
- apiGroups: ["config.istio.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["rbac.istio.io"]
  resources: ["*"]
  verbs: ["get", "watch", "list"]
- apiGroups: ["networking.istio.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["authentication.istio.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["*"]
- apiGroups: ["extensions"]
  resources: ["thirdpartyresources", "thirdpartyresources.extensions", "ingresses", "ingresses/status", "deployments", "deployments/scale"]
  verbs: ["*"]
- apiGroups: ["apps"]
  resources: ["deployments", "deployments/scale"]
  verbs: ["*"]
- apiGroups: [""]
  resources: ["configmaps", "endpoints", "pods", "services", "namespaces", "secrets", "replicationcontrollers"]
  verbs: ["create", "get", "list", "watch", "update", "patch"]
- apiGroups: [""]
  resources: ["endpoints", "pods", "services"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["namespaces", "nodes", "secrets"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: config-change-{{ .Values.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: config-change-{{ .Values.Namespace }}
subjects:
  - kind: ServiceAccount
    name: config-change-service-account
    namespace: {{ .Values.Namespace }}
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: deployment-scaler
  namespace: {{ .Values.Namespace }}
spec:
  # The job takes on average 5 mins to complete, scaling 20 deployments with a 10-20s sleep in between
  # We schedule the job for every 10min, giving us 5min on/off
  schedule: "*/10 * * * *"
  startingDeadlineSeconds: 120
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: kube
            image: istio/kubectl:1.3.0
            args:
            - bash
            - -c
            - |-
              # Kill envoy on exit by calling quit endpoint on the Pilot agent.
              trap "rc=\$?; curl -X POST -s localhost:15020/quitquitquit; exit \$rc" EXIT
              set -x
              n=0
              until [ $n -ge 120 ]; do
                kubectl version && break # wait for envoy
                n=$[$n+1]
                sleep 1
              done

              set -e

              deployments=$(kubectl get deployments -n {{ .Values.Namespace }} -l app=service-graph -o jsonpath="{.items[*].metadata.name}")

              for deployment in ${deployments}; do
                kubectl scale deployments -n {{ .Values.Namespace }} ${deployment} --replicas $((1 + RANDOM % 3))
                sleep {{ .Values.replicasSleep }}
                  # add jitter
                sleep $[ ( $RANDOM % {{ .Values.replicasSleep }} )  + 1 ]s
                # example curl -v http://svc02-0:8080/
                curl -vs http://{{ .Values.serviceNamePrefix }}0:8080/
              done

          restartPolicy: Never
          serviceAccountName: config-change-service-account
